



















    "Choose the type of build, options are: Debug Release RelWithDebInfo MinSizeRel RelWithoutTbbmalloc."

























































































































































































































































    "Choose the type of build, options are: Debug Release RelWithDebInfo MinSizeRel RelWithoutTbbmalloc."

































































if(HADOOP_YARN)

  message(STATUS "running using HDP2.1 hadoop libraries")
else()

  message(STATUS "running using CDH3 hadoop libraries")
endif()



























































































































































































































































































































































































































MARK_AS_ADVANCED(
  CMAKE_CXX_FLAGS_RELWITHOUTTBBMALLOC
  )




















































  set(LINK_DEPENDENCIES ${LINK_DEPENDENCIES} ${ICU_LIBRARIES})





MESSAGE(STATUS "TBB Include Directories: ${TBB_INCLUDE_DIR}")
if(${CMAKE_BUILD_TYPE} MATCHES "Debug" OR ${CMAKE_BUILD_TYPE} MATCHES "RelWithDebInfo" OR ${CMAKE_BUILD_TYPE} MATCHES "RelWithoutTbbmalloc")







  find_package(Cryptopp)


  if(${CRYPTOPP_FOUND})


















if(ZEROMQ_FOUND)
  add_definitions(-DHAVE_ZMQ)
endif()






























































if(${LINUX})


  find_package(NPLM)
  message(STATUS "NPLM include dir: ${NPLM_INCLUDE_DIR}")
  message(STATUS "NPLM libs: ${NPLM_LIBRARIES}")


  message(STATUS "EIGEN include dir: ${EIGEN_INCLUDE_DIR}")
  message(STATUS "TCLAP include dir: ${TCLAP_INCLUDE_DIR}")
  add_definitions(-DHAVE_NPLM)
  set(HAVE_NPLM 1)
endif()




































































































































































endif()

#
# JNI to work with DFS
#
find_package(JNI)




include_directories(${JAVA_INCLUDE_PATH} ${JAVA_INCLUDE_PATH2})
MESSAGE (STATUS "JNI header: ${JAVA_INCLUDE_PATH}")
MESSAGE (STATUS "JVM shared library: ${JAVA_JVM_LIBRARY}")

find_program(MAVEN_EXECUTABLE mvn ${MAVEN_ROOT} NO_DEFAULT_PATH)
if(NOT MAVEN_EXECUTABLE)
  MESSAGE(FATAL_ERROR "Maven was not found.")
endif(NOT MAVEN_EXECUTABLE)


































































































  MorphAnalyzer














  SpellChecker







































































































































































