








#include <vector>


#include <algorithm>



































































































  Self const& operator*() const { return *this; }
  Self const& operator++() const { return *this; }
  Self const& operator++(int) const { return *this; }














































}
















};









}




}













}









































































































}



















































}



  addAll(c, s.begin(), s.end());
}



  append(c, s);
}

struct first {
  template <class P>



};

struct second {
  template <class P>



};

template <class Map, class O>
void keysAdd(Map const& m, O& o) {

}

template <class Map, class O>
void valsAdd(Map const& m, O& o) {

}








}







}

// doesn't work for vector<bool>












  return v[i];
}



































  return c.back();
}








  c.pop_back();
}









  pop(c);
}




























































#endif
