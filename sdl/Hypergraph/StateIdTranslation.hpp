


















































#ifndef STATEIDTRANSLATION_LW20111212_HPP
#define STATEIDTRANSLATION_LW20111212_HPP








#include <boost/noncopyable.hpp>


namespace Hypergraph {






// TODO: version of this that supports kCanonicalLex




















  /// may return kNoState (partial mapping)

  /// may return kNoState; call only for lexical labelpairs (the ones that kCanonicalLex affects)

















































    return outHg->addState(io);




















    return outHg->addState(io);

















    return Util::contains(subset, s) ? this->outHg->addState(io) : kNoState;













































































    //    if (s==kNoState) return s; // handled above already









    if (s == kNoState) return s;

    StateId* r;

      return *r;
  }


    if (s == kNoState) return s;





  StateId addState(StateId s, LabelPair const& io) {
    StateId r = addStateImpl(s, io);





  StateId addStateImpl(StateId s, LabelPair const& io) {

    StateId* r;

      return *r;
  }

























































































};





