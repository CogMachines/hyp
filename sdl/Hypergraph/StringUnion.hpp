



















/* aka dictionary



*/




















  bool push_weights;

  bool loop;  // if !loop, the ignoreTags is meaningless













  bool chars;
  std::string wordsep;


  typedef std::string IgnoreTag;
  typedef std::vector<IgnoreTag> IgnoreTags;


  IgnoreTags ignoreTags;
















































































































  typedef A Arc;












































  void buildTrie(WS const& ws) {











      // TODO: push_weights (postprocess for general (at least acyclic fsm) HG?)
    }
  }























































  typedef std::vector<StateId> LastTrie;



















    LastTrie triep;





    }













    }
    buildTrie(ws);

































































  typedef std::vector<LabelPair> Tags;
  Tags tags;  // input = open, output = close






































